# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import faucetconfrpc_pb2 as faucetconfrpc__pb2


class FaucetConfServerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConfigFile = channel.unary_unary(
                '/faucetconfserver.FaucetConfServer/GetConfigFile',
                request_serializer=faucetconfrpc__pb2.GetConfigFileRequest.SerializeToString,
                response_deserializer=faucetconfrpc__pb2.GetConfigFileReply.FromString,
                )
        self.SetConfigFile = channel.unary_unary(
                '/faucetconfserver.FaucetConfServer/SetConfigFile',
                request_serializer=faucetconfrpc__pb2.SetConfigFileRequest.SerializeToString,
                response_deserializer=faucetconfrpc__pb2.SetConfigFileReply.FromString,
                )


class FaucetConfServerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetConfigFile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfigFile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FaucetConfServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConfigFile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfigFile,
                    request_deserializer=faucetconfrpc__pb2.GetConfigFileRequest.FromString,
                    response_serializer=faucetconfrpc__pb2.GetConfigFileReply.SerializeToString,
            ),
            'SetConfigFile': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfigFile,
                    request_deserializer=faucetconfrpc__pb2.SetConfigFileRequest.FromString,
                    response_serializer=faucetconfrpc__pb2.SetConfigFileReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'faucetconfserver.FaucetConfServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FaucetConfServer(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetConfigFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faucetconfserver.FaucetConfServer/GetConfigFile',
            faucetconfrpc__pb2.GetConfigFileRequest.SerializeToString,
            faucetconfrpc__pb2.GetConfigFileReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetConfigFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/faucetconfserver.FaucetConfServer/SetConfigFile',
            faucetconfrpc__pb2.SetConfigFileRequest.SerializeToString,
            faucetconfrpc__pb2.SetConfigFileReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
