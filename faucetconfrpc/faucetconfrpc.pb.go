// Use generate_pb_grpc.sh to regenerate protobuf and gRPC service definitions.
// Paths and package names here, together with the directory this file resides in, are critical
// for gRPC to work in multiple languages.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: protos/faucetconfrpc/faucetconfrpc.proto

package faucetconfserver

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetConfigFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFilename string `protobuf:"bytes,1,opt,name=config_filename,json=configFilename,proto3" json:"config_filename,omitempty"`
}

func (x *GetConfigFileRequest) Reset() {
	*x = GetConfigFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileRequest) ProtoMessage() {}

func (x *GetConfigFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileRequest.ProtoReflect.Descriptor instead.
func (*GetConfigFileRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{0}
}

func (x *GetConfigFileRequest) GetConfigFilename() string {
	if x != nil {
		return x.ConfigFilename
	}
	return ""
}

type GetConfigFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigYaml string `protobuf:"bytes,1,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
}

func (x *GetConfigFileReply) Reset() {
	*x = GetConfigFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigFileReply) ProtoMessage() {}

func (x *GetConfigFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigFileReply.ProtoReflect.Descriptor instead.
func (*GetConfigFileReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigFileReply) GetConfigYaml() string {
	if x != nil {
		return x.ConfigYaml
	}
	return ""
}

type SetConfigFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFilename string `protobuf:"bytes,1,opt,name=config_filename,json=configFilename,proto3" json:"config_filename,omitempty"`
	ConfigYaml     string `protobuf:"bytes,2,opt,name=config_yaml,json=configYaml,proto3" json:"config_yaml,omitempty"`
	Merge          bool   `protobuf:"varint,3,opt,name=merge,proto3" json:"merge,omitempty"`
}

func (x *SetConfigFileRequest) Reset() {
	*x = SetConfigFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigFileRequest) ProtoMessage() {}

func (x *SetConfigFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigFileRequest.ProtoReflect.Descriptor instead.
func (*SetConfigFileRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{2}
}

func (x *SetConfigFileRequest) GetConfigFilename() string {
	if x != nil {
		return x.ConfigFilename
	}
	return ""
}

func (x *SetConfigFileRequest) GetConfigYaml() string {
	if x != nil {
		return x.ConfigYaml
	}
	return ""
}

func (x *SetConfigFileRequest) GetMerge() bool {
	if x != nil {
		return x.Merge
	}
	return false
}

type SetConfigFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConfigFileReply) Reset() {
	*x = SetConfigFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConfigFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigFileReply) ProtoMessage() {}

func (x *SetConfigFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigFileReply.ProtoReflect.Descriptor instead.
func (*SetConfigFileReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{3}
}

type DelConfigFromFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigFilename string `protobuf:"bytes,1,opt,name=config_filename,json=configFilename,proto3" json:"config_filename,omitempty"`
	ConfigYamlKeys string `protobuf:"bytes,2,opt,name=config_yaml_keys,json=configYamlKeys,proto3" json:"config_yaml_keys,omitempty"`
}

func (x *DelConfigFromFileRequest) Reset() {
	*x = DelConfigFromFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelConfigFromFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelConfigFromFileRequest) ProtoMessage() {}

func (x *DelConfigFromFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelConfigFromFileRequest.ProtoReflect.Descriptor instead.
func (*DelConfigFromFileRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{4}
}

func (x *DelConfigFromFileRequest) GetConfigFilename() string {
	if x != nil {
		return x.ConfigFilename
	}
	return ""
}

func (x *DelConfigFromFileRequest) GetConfigYamlKeys() string {
	if x != nil {
		return x.ConfigYamlKeys
	}
	return ""
}

type DelConfigFromFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelConfigFromFileReply) Reset() {
	*x = DelConfigFromFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelConfigFromFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelConfigFromFileReply) ProtoMessage() {}

func (x *DelConfigFromFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelConfigFromFileReply.ProtoReflect.Descriptor instead.
func (*DelConfigFromFileReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{5}
}

type AddPortMirrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName       string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo       int32  `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	MirrorPortNo int32  `protobuf:"varint,3,opt,name=mirror_port_no,json=mirrorPortNo,proto3" json:"mirror_port_no,omitempty"`
}

func (x *AddPortMirrorRequest) Reset() {
	*x = AddPortMirrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortMirrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortMirrorRequest) ProtoMessage() {}

func (x *AddPortMirrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortMirrorRequest.ProtoReflect.Descriptor instead.
func (*AddPortMirrorRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{6}
}

func (x *AddPortMirrorRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *AddPortMirrorRequest) GetPortNo() int32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *AddPortMirrorRequest) GetMirrorPortNo() int32 {
	if x != nil {
		return x.MirrorPortNo
	}
	return 0
}

type AddPortMirrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPortMirrorReply) Reset() {
	*x = AddPortMirrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortMirrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortMirrorReply) ProtoMessage() {}

func (x *AddPortMirrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortMirrorReply.ProtoReflect.Descriptor instead.
func (*AddPortMirrorReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{7}
}

type RemovePortMirrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName       string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo       int32  `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	MirrorPortNo int32  `protobuf:"varint,3,opt,name=mirror_port_no,json=mirrorPortNo,proto3" json:"mirror_port_no,omitempty"`
}

func (x *RemovePortMirrorRequest) Reset() {
	*x = RemovePortMirrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortMirrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortMirrorRequest) ProtoMessage() {}

func (x *RemovePortMirrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortMirrorRequest.ProtoReflect.Descriptor instead.
func (*RemovePortMirrorRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{8}
}

func (x *RemovePortMirrorRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *RemovePortMirrorRequest) GetPortNo() int32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *RemovePortMirrorRequest) GetMirrorPortNo() int32 {
	if x != nil {
		return x.MirrorPortNo
	}
	return 0
}

type RemovePortMirrorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePortMirrorReply) Reset() {
	*x = RemovePortMirrorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortMirrorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortMirrorReply) ProtoMessage() {}

func (x *RemovePortMirrorReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortMirrorReply.ProtoReflect.Descriptor instead.
func (*RemovePortMirrorReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{9}
}

type AddPortAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo int32  `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	Acl    string `protobuf:"bytes,3,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *AddPortAclRequest) Reset() {
	*x = AddPortAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortAclRequest) ProtoMessage() {}

func (x *AddPortAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortAclRequest.ProtoReflect.Descriptor instead.
func (*AddPortAclRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{10}
}

func (x *AddPortAclRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *AddPortAclRequest) GetPortNo() int32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *AddPortAclRequest) GetAcl() string {
	if x != nil {
		return x.Acl
	}
	return ""
}

type AddPortAclReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPortAclReply) Reset() {
	*x = AddPortAclReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPortAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPortAclReply) ProtoMessage() {}

func (x *AddPortAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPortAclReply.ProtoReflect.Descriptor instead.
func (*AddPortAclReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{11}
}

type RemovePortAclRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpName string `protobuf:"bytes,1,opt,name=dp_name,json=dpName,proto3" json:"dp_name,omitempty"`
	PortNo int32  `protobuf:"varint,2,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	Acl    string `protobuf:"bytes,3,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *RemovePortAclRequest) Reset() {
	*x = RemovePortAclRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortAclRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortAclRequest) ProtoMessage() {}

func (x *RemovePortAclRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortAclRequest.ProtoReflect.Descriptor instead.
func (*RemovePortAclRequest) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{12}
}

func (x *RemovePortAclRequest) GetDpName() string {
	if x != nil {
		return x.DpName
	}
	return ""
}

func (x *RemovePortAclRequest) GetPortNo() int32 {
	if x != nil {
		return x.PortNo
	}
	return 0
}

func (x *RemovePortAclRequest) GetAcl() string {
	if x != nil {
		return x.Acl
	}
	return ""
}

type RemovePortAclReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePortAclReply) Reset() {
	*x = RemovePortAclReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePortAclReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePortAclReply) ProtoMessage() {}

func (x *RemovePortAclReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePortAclReply.ProtoReflect.Descriptor instead.
func (*RemovePortAclReply) Descriptor() ([]byte, []int) {
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP(), []int{13}
}

var File_protos_faucetconfrpc_faucetconfrpc_proto protoreflect.FileDescriptor

var file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63,
	0x6f, 0x6e, 0x66, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e,
	0x66, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66, 0x61, 0x75, 0x63,
	0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x79, 0x61,
	0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x59, 0x61, 0x6d, 0x6c, 0x22, 0x76, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x22, 0x14, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x6d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x72,
	0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6e, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x71, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4d,
	0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x4e, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x57, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f,
	0x72, 0x74, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72,
	0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5a, 0x0a, 0x14, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x72,
	0x74, 0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xc5, 0x05, 0x0a, 0x10,
	0x46, 0x61, 0x75, 0x63, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x5f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x75, 0x63,
	0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x5f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x75,
	0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x6b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74,
	0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65,
	0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e,
	0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x4d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x12, 0x23, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65,
	0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50,
	0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x41, 0x63, 0x6c, 0x12, 0x26, 0x2e, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x66, 0x61,
	0x75, 0x63, 0x65, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x3b, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x63,
	0x6f, 0x6e, 0x66, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescOnce sync.Once
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData = file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc
)

func file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescGZIP() []byte {
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescOnce.Do(func() {
		file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData)
	})
	return file_protos_faucetconfrpc_faucetconfrpc_proto_rawDescData
}

var file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protos_faucetconfrpc_faucetconfrpc_proto_goTypes = []interface{}{
	(*GetConfigFileRequest)(nil),     // 0: faucetconfserver.GetConfigFileRequest
	(*GetConfigFileReply)(nil),       // 1: faucetconfserver.GetConfigFileReply
	(*SetConfigFileRequest)(nil),     // 2: faucetconfserver.SetConfigFileRequest
	(*SetConfigFileReply)(nil),       // 3: faucetconfserver.SetConfigFileReply
	(*DelConfigFromFileRequest)(nil), // 4: faucetconfserver.DelConfigFromFileRequest
	(*DelConfigFromFileReply)(nil),   // 5: faucetconfserver.DelConfigFromFileReply
	(*AddPortMirrorRequest)(nil),     // 6: faucetconfserver.AddPortMirrorRequest
	(*AddPortMirrorReply)(nil),       // 7: faucetconfserver.AddPortMirrorReply
	(*RemovePortMirrorRequest)(nil),  // 8: faucetconfserver.RemovePortMirrorRequest
	(*RemovePortMirrorReply)(nil),    // 9: faucetconfserver.RemovePortMirrorReply
	(*AddPortAclRequest)(nil),        // 10: faucetconfserver.AddPortAclRequest
	(*AddPortAclReply)(nil),          // 11: faucetconfserver.AddPortAclReply
	(*RemovePortAclRequest)(nil),     // 12: faucetconfserver.RemovePortAclRequest
	(*RemovePortAclReply)(nil),       // 13: faucetconfserver.RemovePortAclReply
}
var file_protos_faucetconfrpc_faucetconfrpc_proto_depIdxs = []int32{
	0,  // 0: faucetconfserver.FaucetConfServer.GetConfigFile:input_type -> faucetconfserver.GetConfigFileRequest
	2,  // 1: faucetconfserver.FaucetConfServer.SetConfigFile:input_type -> faucetconfserver.SetConfigFileRequest
	4,  // 2: faucetconfserver.FaucetConfServer.DelConfigFromFile:input_type -> faucetconfserver.DelConfigFromFileRequest
	6,  // 3: faucetconfserver.FaucetConfServer.AddPortMirror:input_type -> faucetconfserver.AddPortMirrorRequest
	8,  // 4: faucetconfserver.FaucetConfServer.RemovePortMirror:input_type -> faucetconfserver.RemovePortMirrorRequest
	10, // 5: faucetconfserver.FaucetConfServer.AddPortAcl:input_type -> faucetconfserver.AddPortAclRequest
	12, // 6: faucetconfserver.FaucetConfServer.RemovePortAcl:input_type -> faucetconfserver.RemovePortAclRequest
	1,  // 7: faucetconfserver.FaucetConfServer.GetConfigFile:output_type -> faucetconfserver.GetConfigFileReply
	3,  // 8: faucetconfserver.FaucetConfServer.SetConfigFile:output_type -> faucetconfserver.SetConfigFileReply
	5,  // 9: faucetconfserver.FaucetConfServer.DelConfigFromFile:output_type -> faucetconfserver.DelConfigFromFileReply
	7,  // 10: faucetconfserver.FaucetConfServer.AddPortMirror:output_type -> faucetconfserver.AddPortMirrorReply
	9,  // 11: faucetconfserver.FaucetConfServer.RemovePortMirror:output_type -> faucetconfserver.RemovePortMirrorReply
	11, // 12: faucetconfserver.FaucetConfServer.AddPortAcl:output_type -> faucetconfserver.AddPortAclReply
	13, // 13: faucetconfserver.FaucetConfServer.RemovePortAcl:output_type -> faucetconfserver.RemovePortAclReply
	7,  // [7:14] is the sub-list for method output_type
	0,  // [0:7] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_protos_faucetconfrpc_faucetconfrpc_proto_init() }
func file_protos_faucetconfrpc_faucetconfrpc_proto_init() {
	if File_protos_faucetconfrpc_faucetconfrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConfigFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelConfigFromFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelConfigFromFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPortMirrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPortMirrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePortMirrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePortMirrorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPortAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPortAclReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePortAclRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePortAclReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_faucetconfrpc_faucetconfrpc_proto_goTypes,
		DependencyIndexes: file_protos_faucetconfrpc_faucetconfrpc_proto_depIdxs,
		MessageInfos:      file_protos_faucetconfrpc_faucetconfrpc_proto_msgTypes,
	}.Build()
	File_protos_faucetconfrpc_faucetconfrpc_proto = out.File
	file_protos_faucetconfrpc_faucetconfrpc_proto_rawDesc = nil
	file_protos_faucetconfrpc_faucetconfrpc_proto_goTypes = nil
	file_protos_faucetconfrpc_faucetconfrpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FaucetConfServerClient is the client API for FaucetConfServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaucetConfServerClient interface {
	GetConfigFile(ctx context.Context, in *GetConfigFileRequest, opts ...grpc.CallOption) (*GetConfigFileReply, error)
	SetConfigFile(ctx context.Context, in *SetConfigFileRequest, opts ...grpc.CallOption) (*SetConfigFileReply, error)
	DelConfigFromFile(ctx context.Context, in *DelConfigFromFileRequest, opts ...grpc.CallOption) (*DelConfigFromFileReply, error)
	AddPortMirror(ctx context.Context, in *AddPortMirrorRequest, opts ...grpc.CallOption) (*AddPortMirrorReply, error)
	RemovePortMirror(ctx context.Context, in *RemovePortMirrorRequest, opts ...grpc.CallOption) (*RemovePortMirrorReply, error)
	AddPortAcl(ctx context.Context, in *AddPortAclRequest, opts ...grpc.CallOption) (*AddPortAclReply, error)
	RemovePortAcl(ctx context.Context, in *RemovePortAclRequest, opts ...grpc.CallOption) (*RemovePortAclReply, error)
}

type faucetConfServerClient struct {
	cc grpc.ClientConnInterface
}

func NewFaucetConfServerClient(cc grpc.ClientConnInterface) FaucetConfServerClient {
	return &faucetConfServerClient{cc}
}

func (c *faucetConfServerClient) GetConfigFile(ctx context.Context, in *GetConfigFileRequest, opts ...grpc.CallOption) (*GetConfigFileReply, error) {
	out := new(GetConfigFileReply)
	err := c.cc.Invoke(ctx, "/faucetconfserver.FaucetConfServer/GetConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faucetConfServerClient) SetConfigFile(ctx context.Context, in *SetConfigFileRequest, opts ...grpc.CallOption) (*SetConfigFileReply, error) {
	out := new(SetConfigFileReply)
	err := c.cc.Invoke(ctx, "/faucetconfserver.FaucetConfServer/SetConfigFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faucetConfServerClient) DelConfigFromFile(ctx context.Context, in *DelConfigFromFileRequest, opts ...grpc.CallOption) (*DelConfigFromFileReply, error) {
	out := new(DelConfigFromFileReply)
	err := c.cc.Invoke(ctx, "/faucetconfserver.FaucetConfServer/DelConfigFromFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faucetConfServerClient) AddPortMirror(ctx context.Context, in *AddPortMirrorRequest, opts ...grpc.CallOption) (*AddPortMirrorReply, error) {
	out := new(AddPortMirrorReply)
	err := c.cc.Invoke(ctx, "/faucetconfserver.FaucetConfServer/AddPortMirror", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faucetConfServerClient) RemovePortMirror(ctx context.Context, in *RemovePortMirrorRequest, opts ...grpc.CallOption) (*RemovePortMirrorReply, error) {
	out := new(RemovePortMirrorReply)
	err := c.cc.Invoke(ctx, "/faucetconfserver.FaucetConfServer/RemovePortMirror", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faucetConfServerClient) AddPortAcl(ctx context.Context, in *AddPortAclRequest, opts ...grpc.CallOption) (*AddPortAclReply, error) {
	out := new(AddPortAclReply)
	err := c.cc.Invoke(ctx, "/faucetconfserver.FaucetConfServer/AddPortAcl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *faucetConfServerClient) RemovePortAcl(ctx context.Context, in *RemovePortAclRequest, opts ...grpc.CallOption) (*RemovePortAclReply, error) {
	out := new(RemovePortAclReply)
	err := c.cc.Invoke(ctx, "/faucetconfserver.FaucetConfServer/RemovePortAcl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FaucetConfServerServer is the server API for FaucetConfServer service.
type FaucetConfServerServer interface {
	GetConfigFile(context.Context, *GetConfigFileRequest) (*GetConfigFileReply, error)
	SetConfigFile(context.Context, *SetConfigFileRequest) (*SetConfigFileReply, error)
	DelConfigFromFile(context.Context, *DelConfigFromFileRequest) (*DelConfigFromFileReply, error)
	AddPortMirror(context.Context, *AddPortMirrorRequest) (*AddPortMirrorReply, error)
	RemovePortMirror(context.Context, *RemovePortMirrorRequest) (*RemovePortMirrorReply, error)
	AddPortAcl(context.Context, *AddPortAclRequest) (*AddPortAclReply, error)
	RemovePortAcl(context.Context, *RemovePortAclRequest) (*RemovePortAclReply, error)
}

// UnimplementedFaucetConfServerServer can be embedded to have forward compatible implementations.
type UnimplementedFaucetConfServerServer struct {
}

func (*UnimplementedFaucetConfServerServer) GetConfigFile(context.Context, *GetConfigFileRequest) (*GetConfigFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigFile not implemented")
}
func (*UnimplementedFaucetConfServerServer) SetConfigFile(context.Context, *SetConfigFileRequest) (*SetConfigFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetConfigFile not implemented")
}
func (*UnimplementedFaucetConfServerServer) DelConfigFromFile(context.Context, *DelConfigFromFileRequest) (*DelConfigFromFileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelConfigFromFile not implemented")
}
func (*UnimplementedFaucetConfServerServer) AddPortMirror(context.Context, *AddPortMirrorRequest) (*AddPortMirrorReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPortMirror not implemented")
}
func (*UnimplementedFaucetConfServerServer) RemovePortMirror(context.Context, *RemovePortMirrorRequest) (*RemovePortMirrorReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePortMirror not implemented")
}
func (*UnimplementedFaucetConfServerServer) AddPortAcl(context.Context, *AddPortAclRequest) (*AddPortAclReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPortAcl not implemented")
}
func (*UnimplementedFaucetConfServerServer) RemovePortAcl(context.Context, *RemovePortAclRequest) (*RemovePortAclReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePortAcl not implemented")
}

func RegisterFaucetConfServerServer(s *grpc.Server, srv FaucetConfServerServer) {
	s.RegisterService(&_FaucetConfServer_serviceDesc, srv)
}

func _FaucetConfServer_GetConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaucetConfServerServer).GetConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faucetconfserver.FaucetConfServer/GetConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaucetConfServerServer).GetConfigFile(ctx, req.(*GetConfigFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaucetConfServer_SetConfigFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaucetConfServerServer).SetConfigFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faucetconfserver.FaucetConfServer/SetConfigFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaucetConfServerServer).SetConfigFile(ctx, req.(*SetConfigFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaucetConfServer_DelConfigFromFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelConfigFromFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaucetConfServerServer).DelConfigFromFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faucetconfserver.FaucetConfServer/DelConfigFromFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaucetConfServerServer).DelConfigFromFile(ctx, req.(*DelConfigFromFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaucetConfServer_AddPortMirror_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPortMirrorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaucetConfServerServer).AddPortMirror(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faucetconfserver.FaucetConfServer/AddPortMirror",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaucetConfServerServer).AddPortMirror(ctx, req.(*AddPortMirrorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaucetConfServer_RemovePortMirror_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePortMirrorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaucetConfServerServer).RemovePortMirror(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faucetconfserver.FaucetConfServer/RemovePortMirror",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaucetConfServerServer).RemovePortMirror(ctx, req.(*RemovePortMirrorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaucetConfServer_AddPortAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPortAclRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaucetConfServerServer).AddPortAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faucetconfserver.FaucetConfServer/AddPortAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaucetConfServerServer).AddPortAcl(ctx, req.(*AddPortAclRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FaucetConfServer_RemovePortAcl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePortAclRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaucetConfServerServer).RemovePortAcl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/faucetconfserver.FaucetConfServer/RemovePortAcl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaucetConfServerServer).RemovePortAcl(ctx, req.(*RemovePortAclRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FaucetConfServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "faucetconfserver.FaucetConfServer",
	HandlerType: (*FaucetConfServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfigFile",
			Handler:    _FaucetConfServer_GetConfigFile_Handler,
		},
		{
			MethodName: "SetConfigFile",
			Handler:    _FaucetConfServer_SetConfigFile_Handler,
		},
		{
			MethodName: "DelConfigFromFile",
			Handler:    _FaucetConfServer_DelConfigFromFile_Handler,
		},
		{
			MethodName: "AddPortMirror",
			Handler:    _FaucetConfServer_AddPortMirror_Handler,
		},
		{
			MethodName: "RemovePortMirror",
			Handler:    _FaucetConfServer_RemovePortMirror_Handler,
		},
		{
			MethodName: "AddPortAcl",
			Handler:    _FaucetConfServer_AddPortAcl_Handler,
		},
		{
			MethodName: "RemovePortAcl",
			Handler:    _FaucetConfServer_RemovePortAcl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/faucetconfrpc/faucetconfrpc.proto",
}
